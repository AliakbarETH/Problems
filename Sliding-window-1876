A string is good if there are no repeated characters.

Given a string s​​​​​, return the number of good substrings of length three in s​​​​​​.

Note that if there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

/**
 * @param {string} s
 * @return {number}
 *
 * Keywords:
 * - substring -> sliding window
 * - of sized three -> fixed size
 * - distinct characters -> set
 */
var countGoodSubstrings = function(s) {
    let good = 0;
    
	// Sliding window of fixed size 3, starting from beginning of string
    for(let left = 0; left < s.length - 2; left++) {
		// Put characters from window into a Set
        const window = [s[left], s[left + 1], s[left + 2]];
        const chars = new Set(window);

		// If each character is distinct, then the Set should be size 3,
		// which would make it a good substring
        if(chars.size === 3) good++;
    }
    return good;
};

/*---------------------------------------------------------------------------------------------------------------------------------*/

/**
 * @param {string} s
 * @return {number}
 */
var countGoodSubstrings = function(s) {
   // make two pointers
   let k = 3
   // length of window
   let start = s[0] ;
   let end = s[3-1] ;

   let subStr = s.substring(start, end + 1)
   // +1 because the second argument is exclusive

   let count = 0 ;
   // it will count the number of good substrings

   while(start!= start++ && start != end)
   {
       count++ ;
       s.substring(start++, end++) ;
   }
    return count ;
}
